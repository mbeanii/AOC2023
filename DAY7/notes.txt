Imagine a list of objects.

Each object has a few properties:
- cards: string[5]
- card_values: List of 5 ints
- wager: int
- type: HandType (string name; int value)
- sort_strength: int

We read the input from a file, and store it in a list of objects.

We first iterate through the list, and for each object:
- calculate the card values
- determine type
- set sort_strength -- each  14 * 5
`- Highest possible hand would be AAAAA, which would be (7 * 435) = 3045 # trump_value = 435 (equal to highest hand numerical value + 1)
14 * 5 * <5 ^ 2> = 70 * 25 = 1750; 14 * (2^4) = 14 * 16 = 224
14 * 4 * <4 ^ 2> = 56 * 16 = 896; 14 * (2^3) = 14 * 8 = 112
14 * 3 * <3 ^ 2> = 42 * 9 = 378; 14 * (2^2) = 14 * 4 = 56
14 * 2 * <2 ^ 2> = 28 * 4 = 112; 14 * (2^1) = 14 * 2 = 28
14 * 1 * <1 ^ 2> = 14 * 1 = 14; 14 * (2^0) = 14 * 1 = 14
Total value for highest hand = 3479 # So there's not too too much waste, considering 14 choose 5 is 2002.

Sort the list based on sort_strength.

We then iterate through the list again, multiplying each weight (len(list) - index) by the wager, and summing the total as we go.

I'll begin by writing the example test.